import { Currency } from "../types";

export const popularCurrencies: Currency[] = [
  { code: "USD", symbol: "$", flag: "ðŸ‡ºðŸ‡¸" },
  { code: "EUR", symbol: "â‚¬", flag: "ðŸ‡ªðŸ‡º" },
  { code: "GBP", symbol: "Â£", flag: "ðŸ‡¬ðŸ‡§" },
  { code: "SAR", symbol: "ï·¼", flag: "ðŸ‡¸ðŸ‡¦" },
  { code: "INR", symbol: "â‚¹", flag: "ðŸ‡®ðŸ‡³" },
  { code: "JPY", symbol: "Â¥", flag: "ðŸ‡¯ðŸ‡µ" },
  { code: "AUD", symbol: "A$", flag: "ðŸ‡¦ðŸ‡º" },
  { code: "CAD", symbol: "C$", flag: "ðŸ‡¨ðŸ‡¦" },
  { code: "CHF", symbol: "CHF", flag: "ðŸ‡¨ðŸ‡­" },
  { code: "SGD", symbol: "S$", flag: "ðŸ‡¸ðŸ‡¬" },
  { code: "AED", symbol: "Ø¯.Ø¥", flag: "ðŸ‡¦ðŸ‡ª" },
  { code: "THB", symbol: "à¸¿", flag: "ðŸ‡¹ðŸ‡­" },
  { code: "MYR", symbol: "RM", flag: "ðŸ‡²ðŸ‡¾" },
  { code: "IDR", symbol: "Rp", flag: "ðŸ‡®ðŸ‡©" },
  { code: "VND", symbol: "â‚«", flag: "ðŸ‡»ðŸ‡³" },
];

export const getExchangeRate = (
  fromCurrency: string,
  toCurrency: string,
): number => {
  if (fromCurrency === toCurrency) return 1;

  // Hardcoded INR-based exchange rates
  const ratesToINR: Record<string, number> = {
    USD: 83.25,
    EUR: 89.75,
    GBP: 104.1,
    SAR: 22.2,
    JPY: 0.56,
    AUD: 55.6,
    CAD: 61.3,
    CHF: 93.45,
    SGD: 61.9,
    AED: 22.65,
    THB: 2.31,
    MYR: 17.75,
    IDR: 0.0052,
    VND: 0.0033,
  };

  const INRToRates: Record<string, number> = Object.fromEntries(
    Object.entries(ratesToINR).map(([code, rate]) => [code, 1 / rate]),
  );

  if (toCurrency === "INR" && ratesToINR[fromCurrency]) {
    return ratesToINR[fromCurrency];
  }

  if (fromCurrency === "INR" && INRToRates[toCurrency]) {
    return INRToRates[toCurrency];
  }

  return 1; // default fallback
};
